package com.liu.gymmanagement.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class WorkoutLogExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table workout_log
     *
     * @mbg.generated Sun Apr 13 21:46:58 CST 2025
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table workout_log
     *
     * @mbg.generated Sun Apr 13 21:46:58 CST 2025
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table workout_log
     *
     * @mbg.generated Sun Apr 13 21:46:58 CST 2025
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table workout_log
     *
     * @mbg.generated Sun Apr 13 21:46:58 CST 2025
     */
    public WorkoutLogExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table workout_log
     *
     * @mbg.generated Sun Apr 13 21:46:58 CST 2025
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table workout_log
     *
     * @mbg.generated Sun Apr 13 21:46:58 CST 2025
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table workout_log
     *
     * @mbg.generated Sun Apr 13 21:46:58 CST 2025
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table workout_log
     *
     * @mbg.generated Sun Apr 13 21:46:58 CST 2025
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table workout_log
     *
     * @mbg.generated Sun Apr 13 21:46:58 CST 2025
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table workout_log
     *
     * @mbg.generated Sun Apr 13 21:46:58 CST 2025
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table workout_log
     *
     * @mbg.generated Sun Apr 13 21:46:58 CST 2025
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table workout_log
     *
     * @mbg.generated Sun Apr 13 21:46:58 CST 2025
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table workout_log
     *
     * @mbg.generated Sun Apr 13 21:46:58 CST 2025
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table workout_log
     *
     * @mbg.generated Sun Apr 13 21:46:58 CST 2025
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table workout_log
     *
     * @mbg.generated Sun Apr 13 21:46:58 CST 2025
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andWorkoutlogidIsNull() {
            addCriterion("WorkoutLogID is null");
            return (Criteria) this;
        }

        public Criteria andWorkoutlogidIsNotNull() {
            addCriterion("WorkoutLogID is not null");
            return (Criteria) this;
        }

        public Criteria andWorkoutlogidEqualTo(Integer value) {
            addCriterion("WorkoutLogID =", value, "workoutlogid");
            return (Criteria) this;
        }

        public Criteria andWorkoutlogidNotEqualTo(Integer value) {
            addCriterion("WorkoutLogID <>", value, "workoutlogid");
            return (Criteria) this;
        }

        public Criteria andWorkoutlogidGreaterThan(Integer value) {
            addCriterion("WorkoutLogID >", value, "workoutlogid");
            return (Criteria) this;
        }

        public Criteria andWorkoutlogidGreaterThanOrEqualTo(Integer value) {
            addCriterion("WorkoutLogID >=", value, "workoutlogid");
            return (Criteria) this;
        }

        public Criteria andWorkoutlogidLessThan(Integer value) {
            addCriterion("WorkoutLogID <", value, "workoutlogid");
            return (Criteria) this;
        }

        public Criteria andWorkoutlogidLessThanOrEqualTo(Integer value) {
            addCriterion("WorkoutLogID <=", value, "workoutlogid");
            return (Criteria) this;
        }

        public Criteria andWorkoutlogidIn(List<Integer> values) {
            addCriterion("WorkoutLogID in", values, "workoutlogid");
            return (Criteria) this;
        }

        public Criteria andWorkoutlogidNotIn(List<Integer> values) {
            addCriterion("WorkoutLogID not in", values, "workoutlogid");
            return (Criteria) this;
        }

        public Criteria andWorkoutlogidBetween(Integer value1, Integer value2) {
            addCriterion("WorkoutLogID between", value1, value2, "workoutlogid");
            return (Criteria) this;
        }

        public Criteria andWorkoutlogidNotBetween(Integer value1, Integer value2) {
            addCriterion("WorkoutLogID not between", value1, value2, "workoutlogid");
            return (Criteria) this;
        }

        public Criteria andUseridIsNull() {
            addCriterion("UserID is null");
            return (Criteria) this;
        }

        public Criteria andUseridIsNotNull() {
            addCriterion("UserID is not null");
            return (Criteria) this;
        }

        public Criteria andUseridEqualTo(String value) {
            addCriterion("UserID =", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotEqualTo(String value) {
            addCriterion("UserID <>", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThan(String value) {
            addCriterion("UserID >", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThanOrEqualTo(String value) {
            addCriterion("UserID >=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThan(String value) {
            addCriterion("UserID <", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThanOrEqualTo(String value) {
            addCriterion("UserID <=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLike(String value) {
            addCriterion("UserID like", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotLike(String value) {
            addCriterion("UserID not like", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridIn(List<String> values) {
            addCriterion("UserID in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotIn(List<String> values) {
            addCriterion("UserID not in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridBetween(String value1, String value2) {
            addCriterion("UserID between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotBetween(String value1, String value2) {
            addCriterion("UserID not between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andDateIsNull() {
            addCriterion("Date is null");
            return (Criteria) this;
        }

        public Criteria andDateIsNotNull() {
            addCriterion("Date is not null");
            return (Criteria) this;
        }

        public Criteria andDateEqualTo(Date value) {
            addCriterionForJDBCDate("Date =", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("Date <>", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateGreaterThan(Date value) {
            addCriterionForJDBCDate("Date >", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("Date >=", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateLessThan(Date value) {
            addCriterionForJDBCDate("Date <", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("Date <=", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateIn(List<Date> values) {
            addCriterionForJDBCDate("Date in", values, "date");
            return (Criteria) this;
        }

        public Criteria andDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("Date not in", values, "date");
            return (Criteria) this;
        }

        public Criteria andDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("Date between", value1, value2, "date");
            return (Criteria) this;
        }

        public Criteria andDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("Date not between", value1, value2, "date");
            return (Criteria) this;
        }

        public Criteria andDurationminutesIsNull() {
            addCriterion("DurationMinutes is null");
            return (Criteria) this;
        }

        public Criteria andDurationminutesIsNotNull() {
            addCriterion("DurationMinutes is not null");
            return (Criteria) this;
        }

        public Criteria andDurationminutesEqualTo(Integer value) {
            addCriterion("DurationMinutes =", value, "durationminutes");
            return (Criteria) this;
        }

        public Criteria andDurationminutesNotEqualTo(Integer value) {
            addCriterion("DurationMinutes <>", value, "durationminutes");
            return (Criteria) this;
        }

        public Criteria andDurationminutesGreaterThan(Integer value) {
            addCriterion("DurationMinutes >", value, "durationminutes");
            return (Criteria) this;
        }

        public Criteria andDurationminutesGreaterThanOrEqualTo(Integer value) {
            addCriterion("DurationMinutes >=", value, "durationminutes");
            return (Criteria) this;
        }

        public Criteria andDurationminutesLessThan(Integer value) {
            addCriterion("DurationMinutes <", value, "durationminutes");
            return (Criteria) this;
        }

        public Criteria andDurationminutesLessThanOrEqualTo(Integer value) {
            addCriterion("DurationMinutes <=", value, "durationminutes");
            return (Criteria) this;
        }

        public Criteria andDurationminutesIn(List<Integer> values) {
            addCriterion("DurationMinutes in", values, "durationminutes");
            return (Criteria) this;
        }

        public Criteria andDurationminutesNotIn(List<Integer> values) {
            addCriterion("DurationMinutes not in", values, "durationminutes");
            return (Criteria) this;
        }

        public Criteria andDurationminutesBetween(Integer value1, Integer value2) {
            addCriterion("DurationMinutes between", value1, value2, "durationminutes");
            return (Criteria) this;
        }

        public Criteria andDurationminutesNotBetween(Integer value1, Integer value2) {
            addCriterion("DurationMinutes not between", value1, value2, "durationminutes");
            return (Criteria) this;
        }

        public Criteria andActivitytypeIsNull() {
            addCriterion("ActivityType is null");
            return (Criteria) this;
        }

        public Criteria andActivitytypeIsNotNull() {
            addCriterion("ActivityType is not null");
            return (Criteria) this;
        }

        public Criteria andActivitytypeEqualTo(String value) {
            addCriterion("ActivityType =", value, "activitytype");
            return (Criteria) this;
        }

        public Criteria andActivitytypeNotEqualTo(String value) {
            addCriterion("ActivityType <>", value, "activitytype");
            return (Criteria) this;
        }

        public Criteria andActivitytypeGreaterThan(String value) {
            addCriterion("ActivityType >", value, "activitytype");
            return (Criteria) this;
        }

        public Criteria andActivitytypeGreaterThanOrEqualTo(String value) {
            addCriterion("ActivityType >=", value, "activitytype");
            return (Criteria) this;
        }

        public Criteria andActivitytypeLessThan(String value) {
            addCriterion("ActivityType <", value, "activitytype");
            return (Criteria) this;
        }

        public Criteria andActivitytypeLessThanOrEqualTo(String value) {
            addCriterion("ActivityType <=", value, "activitytype");
            return (Criteria) this;
        }

        public Criteria andActivitytypeLike(String value) {
            addCriterion("ActivityType like", value, "activitytype");
            return (Criteria) this;
        }

        public Criteria andActivitytypeNotLike(String value) {
            addCriterion("ActivityType not like", value, "activitytype");
            return (Criteria) this;
        }

        public Criteria andActivitytypeIn(List<String> values) {
            addCriterion("ActivityType in", values, "activitytype");
            return (Criteria) this;
        }

        public Criteria andActivitytypeNotIn(List<String> values) {
            addCriterion("ActivityType not in", values, "activitytype");
            return (Criteria) this;
        }

        public Criteria andActivitytypeBetween(String value1, String value2) {
            addCriterion("ActivityType between", value1, value2, "activitytype");
            return (Criteria) this;
        }

        public Criteria andActivitytypeNotBetween(String value1, String value2) {
            addCriterion("ActivityType not between", value1, value2, "activitytype");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table workout_log
     *
     * @mbg.generated do_not_delete_during_merge Sun Apr 13 21:46:58 CST 2025
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table workout_log
     *
     * @mbg.generated Sun Apr 13 21:46:58 CST 2025
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}